{"version":3,"sources":["components/Filter.module.css","components/ContactForm.module.css","components/ContactForm.js","components/ContactList.js","components/Filter.js","App.js","index.js","components/ContactList.module.css"],"names":["module","exports","INITIAL_STATE","id","name","number","ContactForm","state","inputId","nanoid","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","styles","form","htmlFor","type","pattern","title","required","onChange","Component","ContactList","ul","contacts","map","item","li","button","onClick","onDeleteContact","Filter","filter","input","App","formSubmitHandler","data","nextName","toLowerCase","length","contact","alert","changeFilter","deleteContact","targetId","prevState","getVisibleContact","normalizedFilter","includes","visbleContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f07fefb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1j3kA\",\"title\":\"Filter_title__2d21L\",\"input\":\"Filter_input__3VSyh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2kKlw\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\nimport { nanoid } from 'nanoid';\n\nconst INITIAL_STATE = {\n  id: '',\n  name: '',\n  number: '',\n};\n\nexport class ContactForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  inputId = nanoid();\n\n  handleChange = event => {\n    // отображалка для поля ввода\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    // отсылалка данных из полей формы\n    event.preventDefault();\n    this.props.onSubmit({ ...this.state });\n    this.reset();\n  };\n\n  reset = () => {\n    // опустошалка полей ввода\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label htmlFor={this.inputId}>\n          <h2>Name</h2>\n          <input\n            id={this.inputId}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n          <h2>Number</h2>\n          <input\n            id={this.inputId}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nexport class ContactList extends Component {\n  render() {\n    return (\n      <ul className={styles.ul}>\n        {this.props.contacts.map(item => (\n          <li key={item.id} className={styles.li}>\n            {item.name}: {item.number}\n            <button\n              className={styles.button}\n              type=\"button\"\n              onClick={() => this.props.onDeleteContact(item.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import styles from './Filter.module.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.filter}>\n    <h3 className={styles.title}> Find contact by name</h3>\n    <input\n      className={styles.input}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import './App.css';\n\nimport { Component } from 'react';\nimport { ContactForm } from './components/ContactForm';\nimport { ContactList } from './components/ContactList';\nimport Filter from './components/Filter';\n\nimport { nanoid } from 'nanoid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    const nextName = data.name.toLowerCase();\n    // проверка на совпадение с БД\n    if (\n      this.state.contacts.filter(item => item.name.toLowerCase() === nextName)\n        .length === 0\n    ) {\n      // заносим в БД новенького\n      data.id = nanoid();\n      const contact = { ...data };\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    } else {\n      // или ругаемся\n      alert(data.name + ' is already in contacts');\n    }\n  };\n\n  changeFilter = event => {\n    // вносим строку поиска в this.state.filter\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  deleteContact = targetId => {\n    // создаем новый массив БД без элемента с выбранным ID (типа удаляем выбранный ID)\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== targetId),\n    }));\n  };\n\n  getVisibleContact = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    // ищем контакты в БД по имени из this.state.filter\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visbleContact = this.getVisibleContact();\n\n    return (\n      <div className=\"App\">\n        <h1>goit-react-hw-02-phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2 className=\"title\"> Contacts </h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visbleContact}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__1DWfV\",\"li\":\"ContactList_li__29VAq\",\"button\":\"ContactList_button__2L2KV\"};"],"sourceRoot":""}