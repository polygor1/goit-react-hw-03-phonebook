{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","INITIAL_STATE","id","name","number","ContactForm","state","inputId","nanoid","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","styles","form","htmlFor","type","pattern","title","required","onChange","Component","ContactListItem","li","button","onClick","onDeleteContact","ContactList","ul","contacts","map","Filter","filter","input","App","formSubmitHandler","data","nextName","toLowerCase","item","length","contact","alert","changeFilter","deleteContact","targetId","prevState","getVisibleContact","normalizedFilter","includes","localStorage","getItem","parseContacts","JSON","parse","prevProps","setItem","stringify","visbleContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21007cc3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__25wF8\",\"title\":\"Filter_title__3B1nh\",\"input\":\"Filter_input__24Sjv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1A3Cv\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst INITIAL_STATE = {\r\n  id: '',\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nexport class ContactForm extends Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n  inputId = nanoid();\r\n\r\n  handleChange = event => {\r\n    // отображалка для поля ввода\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    // отсылалка данных из полей формы\r\n    event.preventDefault();\r\n    this.props.onSubmit({ ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    // опустошалка полей ввода\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <label htmlFor={this.inputId}>\r\n          <h2>Name</h2>\r\n          <input\r\n            id={this.inputId}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n          <h2>Number</h2>\r\n          <input\r\n            id={this.inputId}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nexport class ContactListItem extends Component {\n  render() {\n    return (\n      <li className={styles.li}>\n        {this.props.name}: {this.props.number}\n        <button\n          className={styles.button}\n          type=\"button\"\n          onClick={this.props.onDeleteContact}\n        >\n          Delete\n        </button>\n      </li>\n    );\n  }\n}\n\nContactListItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\nimport { ContactListItem } from './ContactListItem';\n\nexport class ContactList extends Component {\n  render() {\n    return (\n      <ul className={styles.ul}>\n        {this.props.contacts.map(({ id, name, number }) => (\n          <ContactListItem\n            key={id}\n            name={name}\n            number={number}\n            onDeleteContact={() => this.props.onDeleteContact(id)}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import styles from './Filter.module.css';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.filter}>\r\n    <h3 className={styles.title}> Find contact by name</h3>\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import './App.css';\r\n\r\nimport { Component } from 'react';\r\nimport { ContactForm } from './components/ContactForm/ContactForm';\r\nimport { ContactList } from './components/ContactList/ContactList';\r\nimport Filter from './components/Filter/Filter';\r\n\r\nimport { nanoid } from 'nanoid';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    // читаем данные из localStorage\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parseContacts = JSON.parse(contacts);\r\n    // если они там есть ;)\r\n    if (parseContacts) {\r\n      this.setState({ contacts: parseContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // если данные изменились пишем всех в localStorage\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n  formSubmitHandler = data => {\r\n    const nextName = data.name.toLowerCase();\r\n    // проверка на совпадение с БД\r\n    if (\r\n      this.state.contacts.filter(item => item.name.toLowerCase() === nextName)\r\n        .length === 0\r\n    ) {\r\n      // заносим в БД новенького\r\n      data.id = nanoid();\r\n      const contact = { ...data };\r\n      this.setState(({ contacts }) => ({\r\n        contacts: [contact, ...contacts],\r\n      }));\r\n    } else {\r\n      // или ругаемся\r\n      alert(data.name + ' is already in contacts');\r\n    }\r\n  };\r\n\r\n  changeFilter = event => {\r\n    // вносим строку поиска в this.state.filter\r\n    this.setState({ filter: event.currentTarget.value });\r\n  };\r\n\r\n  deleteContact = targetId => {\r\n    // создаем новый массив БД без элемента с выбранным ID (типа удаляем выбранный ID)\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== targetId),\r\n    }));\r\n  };\r\n\r\n  getVisibleContact = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    // ищем контакты в БД по имени из this.state.filter\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visbleContact = this.getVisibleContact();\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>goit-react-hw-03-phonebook</h1>\r\n        <ContactForm onSubmit={this.formSubmitHandler} />\r\n        <h2 className=\"title\"> Contacts </h2>\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <ContactList\r\n          contacts={visbleContact}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__Sj_p-\",\"li\":\"ContactList_li__3siuD\",\"button\":\"ContactList_button__2JbM_\"};"],"sourceRoot":""}